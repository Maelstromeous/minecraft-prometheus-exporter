# HELP mc_player_list The players connected to the server.
# TYPE mc_player_list gauge
mc_player_list{id="00000000-0000-0000-0000-000000000000",name="player",} 1.0
# HELP mc_server_tick_seconds Stats on server tick times.
# TYPE mc_server_tick_seconds histogram
mc_server_tick_seconds_bucket{le="0.01",} 2337.0
mc_server_tick_seconds_bucket{le="0.025",} 3725.0
mc_server_tick_seconds_bucket{le="0.05",} 3747.0
mc_server_tick_seconds_bucket{le="0.1",} 3758.0
mc_server_tick_seconds_bucket{le="0.25",} 3767.0
mc_server_tick_seconds_bucket{le="0.5",} 3770.0
mc_server_tick_seconds_bucket{le="1.0",} 3771.0
mc_server_tick_seconds_bucket{le="+Inf",} 3773.0
mc_server_tick_seconds_count 3773.0
mc_server_tick_seconds_sum 36.98527054000007
# HELP mc_dimension_chunks_loaded The number of loaded dimension chunks.
# TYPE mc_dimension_chunks_loaded gauge
mc_dimension_chunks_loaded{id="0",name="overworld",} 362.0
# HELP mc_dimension_tick_seconds Stats on dimension tick times.
# TYPE mc_dimension_tick_seconds histogram
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="0.01",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="0.025",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="0.05",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="0.1",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="0.25",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="0.5",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="1.0",} 101.0
mc_dimension_tick_seconds_bucket{id="-1",name="the_nether",le="+Inf",} 101.0
mc_dimension_tick_seconds_count{id="-1",name="the_nether",} 101.0
mc_dimension_tick_seconds_sum{id="-1",name="the_nether",} 0.021833118000000002
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="0.01",} 2975.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="0.025",} 3743.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="0.05",} 3763.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="0.1",} 3770.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="0.25",} 3773.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="0.5",} 3773.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="1.0",} 3773.0
mc_dimension_tick_seconds_bucket{id="0",name="overworld",le="+Inf",} 3773.0
mc_dimension_tick_seconds_count{id="0",name="overworld",} 3773.0
mc_dimension_tick_seconds_sum{id="0",name="overworld",} 26.892774211000052
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="0.01",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="0.025",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="0.05",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="0.1",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="0.25",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="0.5",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="1.0",} 101.0
mc_dimension_tick_seconds_bucket{id="1",name="the_end",le="+Inf",} 101.0
mc_dimension_tick_seconds_count{id="1",name="the_end",} 101.0
mc_dimension_tick_seconds_sum{id="1",name="the_end",} 0.017150961000000003
# HELP jvm_memory_objects_pending_finalization The number of objects waiting in the finalizer queue.
# TYPE jvm_memory_objects_pending_finalization gauge
jvm_memory_objects_pending_finalization 0.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 1.715498744E9
jvm_memory_bytes_used{area="nonheap",} 2.53475056E8
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 6.9861376E9
jvm_memory_bytes_committed{area="nonheap",} 2.6112E8
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 7.635730432E9
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 4.294967296E9
jvm_memory_bytes_init{area="nonheap",} 2555904.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="Code Cache",} 6.6923968E7
jvm_memory_pool_bytes_used{pool="Metaspace",} 1.60126968E8
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 2.642412E7
jvm_memory_pool_bytes_used{pool="PS Eden Space",} 7.97577816E8
jvm_memory_pool_bytes_used{pool="PS Survivor Space",} 3.15607392E8
jvm_memory_pool_bytes_used{pool="PS Old Gen",} 6.02313536E8
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="Code Cache",} 6.8091904E7
jvm_memory_pool_bytes_committed{pool="Metaspace",} 1.65064704E8
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 2.7963392E7
jvm_memory_pool_bytes_committed{pool="PS Eden Space",} 1.941438464E9
jvm_memory_pool_bytes_committed{pool="PS Survivor Space",} 3.15621376E8
jvm_memory_pool_bytes_committed{pool="PS Old Gen",} 4.72907776E9
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="Code Cache",} 2.5165824E8
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="PS Eden Space",} 2.08666624E9
jvm_memory_pool_bytes_max{pool="PS Survivor Space",} 3.15621376E8
jvm_memory_pool_bytes_max{pool="PS Old Gen",} 5.726797824E9
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="Code Cache",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="PS Eden Space",} 1.073741824E9
jvm_memory_pool_bytes_init{pool="PS Survivor Space",} 1.78782208E8
jvm_memory_pool_bytes_init{pool="PS Old Gen",} 2.863661056E9
# HELP jvm_memory_pool_collection_used_bytes Used bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_used_bytes gauge
jvm_memory_pool_collection_used_bytes{pool="PS Eden Space",} 0.0
jvm_memory_pool_collection_used_bytes{pool="PS Survivor Space",} 3.15607392E8
jvm_memory_pool_collection_used_bytes{pool="PS Old Gen",} 3.90022816E8
# HELP jvm_memory_pool_collection_committed_bytes Committed after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_committed_bytes gauge
jvm_memory_pool_collection_committed_bytes{pool="PS Eden Space",} 1.941438464E9
jvm_memory_pool_collection_committed_bytes{pool="PS Survivor Space",} 3.15621376E8
jvm_memory_pool_collection_committed_bytes{pool="PS Old Gen",} 4.72907776E9
# HELP jvm_memory_pool_collection_max_bytes Max bytes after last collection of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_max_bytes gauge
jvm_memory_pool_collection_max_bytes{pool="PS Eden Space",} 2.08666624E9
jvm_memory_pool_collection_max_bytes{pool="PS Survivor Space",} 3.15621376E8
jvm_memory_pool_collection_max_bytes{pool="PS Old Gen",} 5.726797824E9
# HELP jvm_memory_pool_collection_init_bytes Initial after last collection bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_collection_init_bytes gauge
jvm_memory_pool_collection_init_bytes{pool="PS Eden Space",} 1.073741824E9
jvm_memory_pool_collection_init_bytes{pool="PS Survivor Space",} 1.78782208E8
jvm_memory_pool_collection_init_bytes{pool="PS Old Gen",} 2.863661056E9
# HELP jvm_classes_currently_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_currently_loaded gauge
jvm_classes_currently_loaded 30423.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 30423.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 0.0
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Private Build",version="1.8.0_292-8u292-b10-0ubuntu1~20.04-b10",} 1.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="direct",} 2163007.0
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="direct",} 2163006.0
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="direct",} 8.0
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
# HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="Code Cache",} 6.610496E7
jvm_memory_pool_allocated_bytes_total{pool="PS Eden Space",} 4.463788032E9
jvm_memory_pool_allocated_bytes_total{pool="PS Old Gen",} 6.02313536E8
jvm_memory_pool_allocated_bytes_total{pool="PS Survivor Space",} 3.15607392E8
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 2.6422488E7
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 1.59974864E8
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 86.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 76.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 86.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 151.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="NEW",} 0.0
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="WAITING",} 32.0
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="TIMED_WAITING",} 7.0
jvm_threads_state{state="RUNNABLE",} 47.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="PS Scavenge",} 16.0
jvm_gc_collection_seconds_sum{gc="PS Scavenge",} 1.432
jvm_gc_collection_seconds_count{gc="PS MarkSweep",} 4.0
jvm_gc_collection_seconds_sum{gc="PS MarkSweep",} 1.108
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 317.32
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.6465960546E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 295.0
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576.0
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 1.9835076608E10
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 4.210798592E9
# HELP jvm_memory_pool_allocated_bytes_created Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_created gauge
jvm_memory_pool_allocated_bytes_created{pool="Code Cache",} 1.64659615393E9
jvm_memory_pool_allocated_bytes_created{pool="PS Eden Space",} 1.64659615393E9
jvm_memory_pool_allocated_bytes_created{pool="PS Old Gen",} 1.64659615393E9
jvm_memory_pool_allocated_bytes_created{pool="PS Survivor Space",} 1.64659615393E9
jvm_memory_pool_allocated_bytes_created{pool="Compressed Class Space",} 1.64659615393E9
jvm_memory_pool_allocated_bytes_created{pool="Metaspace",} 1.64659615393E9
# HELP mc_dimension_tick_seconds_created Stats on dimension tick times.
# TYPE mc_dimension_tick_seconds_created gauge
mc_dimension_tick_seconds_created{id="-1",name="the_nether",} 1.6465961187E9
mc_dimension_tick_seconds_created{id="0",name="overworld",} 1.646596118622E9
mc_dimension_tick_seconds_created{id="1",name="the_end",} 1.646596118705E9
# HELP mc_server_tick_seconds_created Stats on server tick times.
# TYPE mc_server_tick_seconds_created gauge
mc_server_tick_seconds_created 1.646596118504E9
